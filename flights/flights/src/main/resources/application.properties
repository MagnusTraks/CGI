# Server Port (remains the same)
server.port=8080

# PostgreSQL Database Settings
# Asenda 'mydatabase', 'myuser', 'mypassword' oma tegelike väärtustega
# Asenda 'localhost:5432' oma PostgreSQL serveri aadressi ja pordiga, kui see pole vaikimisi
spring.datasource.url=jdbc:postgresql://localhost:5432/flights
spring.datasource.username=postgres
spring.datasource.password=sql
# Draiveri klassinime pole tavaliselt vaja määrata, Spring Boot tuvastab selle URL-i põhjal

# JPA/Hibernate Settings
# Vali sobiv strateegia vastavalt arendusetapile ja keskkonnale:
# create-drop: Loob skeemi käivitamisel, kustutab seiskamisel (hea testimiseks/arenduseks, aga kaotab andmed)
# update: Püüab uuendada olemasolevat skeemi vastavalt entity muutustele (arenduses mugav, aga riskantne produktsioonis)
# validate: Kontrollib, kas entity'd vastavad andmebaasi skeemile, ei muuda midagi. (Hea produktsioonis)
# none: Ei tee midagi skeemiga (Eeldab, et skeem on loodud manuaalselt või migratsioonitööriistaga nagu Flyway/Liquibase)

spring.jpa.hibernate.ddl-auto=create-drop

# PostgreSQL jaoks spetsiifiline dialekt (Spring Boot tuvastab selle tavaliselt automaatselt, aga selguse mõttes võib lisada)
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true # Formateeri SQL loetavamaks

# H2 Console seaded pole enam vajalikud
# spring.h2.console.enabled=false